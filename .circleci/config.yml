version: 2.1

orbs:
  docker: circleci/docker@1.5.0

jobs:
  # install-frontend-dependencies:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         keys: [frontend-dependencies]
  #     - run:
  #         name: Front-end dependencies install
  #         command: |
  #           cd frontend
  #           npm i
  #     - save_cache:
  #         paths: [frontend/node_modules]
  #         key: frontend-dependencies

  # lint-frontend:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         keys: [frontend-dependencies]
  #     - run:
  #         name: Front-end lint
  #         command: |
  #            cd frontend
  #            npm i
  #            npm run lint
  build-and-push-docker-image:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build -t danrhjones/wunder-weather:${CIRCLE_SHA1} .
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
            docker push danrhjones/wunder-weather:${CIRCLE_SHA1}
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Install awscli and gettext-base
          command: |
            sudo pip3 install awscli
            sudo apt-get install gettext-base
      - run:
          name: Install aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
      - run:
          name: Install kubectl
          command: |
            curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Connect to cluster
          command: |
            aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name wunder-weather
  
      - run:
          name: Deploy
          command: |
            kubectl apply -f cloudformation/deployment.yml
            kubectl apply -f cloudformation/service.yml
            kubectl get pods -o wide
            kubectl get nodes -o wide

workflows:
  default:
    jobs:
      # - install-frontend-dependencies
      # - lint-frontend:
      #     requires: [install-frontend-dependencies]
      - build-and-push-docker-image
          # requires: [lint-frontend]
      - deploy:
          requires: [build-and-push-docker-image]
